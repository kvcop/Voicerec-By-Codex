name: CI

on:
  push:
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'
              - '.github/workflows/**'
              - 'install_deps.sh'
              - 'scripts/install_backend_deps.sh'
            frontend:
              - 'frontend/**'
              - '.github/workflows/**'
              - 'install_deps.sh'
              - 'scripts/install_frontend_deps.sh'

  backend:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: voicerec
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        run: pip install uv
      - name: Install backend dependencies
        run: ./scripts/install_backend_deps.sh
      - name: Ruff check
        run: uv run ruff check .
        working-directory: backend
      - name: Ruff format check
        run: uv run ruff format --check .
        working-directory: backend
      - name: Mypy
        run: uv run mypy .
        working-directory: backend
      - name: Pytest
        run: uv run pytest
        working-directory: backend
        env:
          DATABASE_URL: postgresql+asyncpg://user:password@localhost:5432/voicerec

  frontend:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend dependencies
        run: ./scripts/install_frontend_deps.sh
      - name: Frontend lint
        run: npm run lint
        working-directory: frontend
      - name: Frontend tests
        run: npm test -- --ci
        working-directory: frontend
